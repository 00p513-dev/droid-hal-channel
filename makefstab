#!/usr/bin/perl -w

@mnt_skip = @ARGV;

while (<STDIN>) {
      next if /^\s*#/ or /^\s*$/;

      my ($src, $mnt_point, $type, $mnt_flagsandoptions, $fs_mgr_flags) = split;

      next if  grep( /^$mnt_point$/, @mnt_skip) ;

      # emmc doesn't work. It may be nice to generate these in a
      # disabled state.
      next if $type =~ /emmc/ ;

      # From: http://www.freedesktop.org/software/systemd/man/systemd.unit.html :
      # For unit names reflecting paths
      # Example: a device unit dev-sda.device == /dev/sda Given a
      # path, "/" is replaced by "-",
      ($unitname = $mnt_point) =~ tr(/)(-) ;
      # and all unprintable characters and the "-" are replaced by
      # C-style "\x20" escapes.
      ###### FIXME - not implemented #####
      # The initial and ending "/" is removed from all paths during
      # transformation. This escaping is reversible.
      $unitname =~ s/^-//;
      $unitname =~ s/-$//;
      open(UNIT, ">$unitname.mount") or die "Couldn't write to $unitname.mount\n";

      $mnt_flagsandoptions =~ s/(context=[^,]*)//;
      $secontext = $1;
      # tidy up in case we left leading,trailing or paired ,s
      $mnt_flagsandoptions =~ s/,,/,/;
      $mnt_flagsandoptions =~ s/^,//;
      $mnt_flagsandoptions =~ s/,$//;

      print UNIT <<"END" ;
[Unit]
Description=Droid mount for $mnt_point
Before=local-fs.target systemd-modules-load.service

[Mount]
What=$src
Where=$mnt_point
Type=$type
Options=$mnt_flagsandoptions
# Options had SELinux context option:  $secontext

[Install]
WantedBy=local-fs.target
END
      print "Wrote $unitname.unit\n";
      close UNIT;
    }
